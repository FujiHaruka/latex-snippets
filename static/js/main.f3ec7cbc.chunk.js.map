{"version":3,"sources":["helpers.js","Svg2PngWorker.js","hooks.js","MathJaxLoader.jsx","TexSvg.jsx","Buttons.jsx","SnippetList.jsx","Logo.jsx","App.jsx","index.js"],"names":["donwloadBlob","objectUrl","filename","a","document","createElement","body","appendChild","download","href","click","remove","setTimeout","URL","revokeObjectURL","Storage","text","key","dayjs","unix","window","localStorage","setItem","Object","keys","filter","startsWith","map","date","Number","split","pop","isNaN","sort","b","tex","getItem","removeItem","processData","data","width","height","svg","emSize","canvas","OffscreenCanvas","ctx","getContext","Canvg","from","presets","offscreen","v","render","convertToBlob","blob","pngUrl","createObjectURL","MathJaxContext","createContext","ready","MathJaxLoader","children","useState","setReady","useEffect","MathJax","fontCache","startup","defaultReady","Provider","value","TexSvg","scale","useContext","setSvg","tex2svgPromise","display","then","svgText","firstElementChild","outerHTML","baseVal","valueInSpecifiedUnits","src","Placeholder","Paragraph","Line","SaveButton","onClick","completed","setCompleted","onSave","useCallback","Button","disabled","Icon","name","SnippetsToggleButton","onToggle","open","SnippetList","snippets","onPaste","onDownload","onDelete","List","relaxed","divided","length","Item","Content","floated","icon","circular","title","size","style","marginLeft","className","Logo","App","init","useMemo","setSnippets","sync","deleteSnippet","addSnippet","topSnippet","useSnippetStorage","initText","setText","onChangeText","e","target","onResetText","useTextInput","initBool","setOpen","arg","val","useToggle","openSnippets","toggleOpenSnippets","pngScale","svgScale","snippet","useDownloadPng","Container","rel","Form","TextArea","placeholder","onChange","spellCheck","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3ec7cbc.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\n\nexport const donwloadBlob = (objectUrl, filename) => {\n  const a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  a.download = filename;\n  a.href = objectUrl;\n  a.click();\n  a.remove();\n  setTimeout(() => {\n    URL.revokeObjectURL(objectUrl);\n  }, 1000);\n};\n\nexport const Storage = {\n  saveSnippet(text) {\n    const key = `latex-snippets:${dayjs().unix()}`;\n    window.localStorage.setItem(key, text);\n  },\n  listSnippets() {\n    const keys = Object.keys(localStorage)\n      .filter((key) => key.startsWith(\"latex-snippets:\"))\n      .map((key) => ({ key, date: Number(key.split(\":\").pop()) }))\n      .filter(({ date }) => !Number.isNaN(date))\n      .sort((a, b) => b.date - a.date)\n      .map(({ key }) => key);\n    const snippets = keys.map((key) => ({\n      tex: window.localStorage.getItem(key),\n      key,\n    }));\n    return snippets;\n  },\n  deleteSnippet(key) {\n    window.localStorage.removeItem(key);\n  },\n};\n","import Canvg, { presets } from \"canvg\";\n\nexport async function processData(data) {\n  const { width, height, svg, emSize } = data;\n  const canvas = new OffscreenCanvas(width, height);\n  const ctx = canvas.getContext(\"2d\");\n  const v = await Canvg.from(ctx, svg, {\n    ...presets.offscreen(),\n    emSize,\n  });\n  await v.render();\n  const blob = await canvas.convertToBlob();\n  const pngUrl = URL.createObjectURL(blob);\n  return { pngUrl };\n}\n","import { useMemo } from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { donwloadBlob, Storage } from \"./helpers\";\nimport { processData } from \"./Svg2PngWorker\";\n\nexport const useTextInput = (initText) => {\n  const [text, setText] = useState(initText);\n  const onChangeText = useCallback(\n    (e) => {\n      setText(e.target.value);\n    },\n    [setText]\n  );\n  return {\n    text,\n    onChangeText,\n    onResetText: setText,\n  };\n};\n\nexport const useToggle = (initBool) => {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = useCallback(\n    (arg) => {\n      if (typeof arg === \"boolean\") {\n        setOpen(arg);\n      } else {\n        setOpen((val) => !val);\n      }\n    },\n    [setOpen]\n  );\n  return [open, toggleOpen];\n};\n\nexport const useSnippetStorage = () => {\n  const init = useMemo(() => Storage.listSnippets(), []);\n  const [snippets, setSnippets] = useState(init);\n  const sync = useCallback(() => {\n    const snippets = Storage.listSnippets();\n    setSnippets(snippets);\n  }, [setSnippets]);\n  const deleteSnippet = useCallback(\n    (key) => {\n      Storage.deleteSnippet(key);\n      sync();\n    },\n    [sync]\n  );\n  const addSnippet = useCallback(\n    (tex) => {\n      Storage.saveSnippet(tex);\n      sync();\n    },\n    [sync]\n  );\n  return {\n    addSnippet,\n    deleteSnippet,\n    snippets,\n    topSnippet: snippets[0]?.tex,\n  };\n};\n\nexport const useDownloadPng = ({ pngScale, svgScale }) => {\n  const onDownload = useCallback(\n    async (snippet) => {\n      const { tex, key } = snippet;\n      const svg = await window.MathJax.tex2svgPromise(tex, {\n        display: false,\n      }).then((svg) => {\n        const svgText = svg.firstElementChild.outerHTML;\n        const width =\n          svg.firstElementChild.width.baseVal.valueInSpecifiedUnits * svgScale;\n        const height =\n          svg.firstElementChild.height.baseVal.valueInSpecifiedUnits * svgScale;\n        return {\n          svgText,\n          width,\n          height,\n        };\n      });\n      const width = svg.width * pngScale;\n      const height = svg.height * pngScale;\n      const { pngUrl } = await processData({\n        svg: svg.svgText,\n        width,\n        height,\n        emSize: svgScale * pngScale * 2,\n      });\n      donwloadBlob(pngUrl, `${key.split(\":\").pop()}.png`);\n    },\n    [pngScale, svgScale]\n  );\n  return onDownload;\n};\n","import { createContext, useContext, useEffect, useState } from \"react\";\n\nconst MathJaxContext = createContext({ ready: false });\n\nexport const useMathJaxContext = () => useContext(MathJaxContext);\n\nexport const MathJaxLoader = ({ children }) => {\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    // Load MathJax\n    window.MathJax = {\n      tex: {},\n      svg: {\n        fontCache: \"none\",\n      },\n      startup: {\n        ready: () => {\n          window.MathJax.startup.defaultReady();\n          setReady(true);\n        },\n      },\n    };\n    void import(\"mathjax/es5/tex-svg-full\");\n  }, []);\n  return (\n    <MathJaxContext.Provider value={{ ready }}>\n      {children}\n    </MathJaxContext.Provider>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport { Placeholder } from \"semantic-ui-react\";\nimport { useMathJaxContext } from \"./MathJaxLoader\";\n\nexport const TexSvg = ({ tex, scale }) => {\n  const { ready } = useMathJaxContext();\n  const [svg, setSvg] = useState(null);\n  useEffect(() => {\n    if (!ready) {\n      return;\n    }\n    if (!tex) {\n      setSvg(null);\n      return;\n    }\n    window.MathJax.tex2svgPromise(tex, { display: false }).then((svg) => {\n      const svgText = svg.firstElementChild.outerHTML;\n      const width =\n        svg.firstElementChild.width.baseVal.valueInSpecifiedUnits * scale;\n      const height =\n        svg.firstElementChild.height.baseVal.valueInSpecifiedUnits * scale;\n      setSvg({ svgText, width, height });\n    });\n  }, [ready, tex, setSvg, scale]);\n\n  if (!tex) {\n    return null;\n  }\n  if (!svg) {\n    return (\n      <Placeholder>\n        <Placeholder.Paragraph>\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n        </Placeholder.Paragraph>\n      </Placeholder>\n    );\n  }\n\n  return <SVG src={svg.svgText} width={svg.width} height={svg.height} />;\n};\n","import { useCallback, useState } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nexport const SaveButton = ({ onClick }) => {\n  const [completed, setCompleted] = useState(false);\n  const onSave = useCallback(() => {\n    onClick();\n    setCompleted(true);\n    setTimeout(() => {\n      setCompleted(false);\n    }, 1000);\n  }, [onClick]);\n  return (\n    <Button onClick={onSave} disabled={completed}>\n      {completed ? (\n        <>\n          <Icon name=\"check\" /> Save\n        </>\n      ) : (\n        <>\n          <Icon name=\"save outline\" /> Save\n        </>\n      )}\n    </Button>\n  );\n};\n\nexport const SnippetsToggleButton = ({ onToggle, open }) => {\n  return (\n    <Button onClick={onToggle}>\n      {open ? (\n        <>\n          <Icon name=\"angle up\" /> Hide Snippets\n        </>\n      ) : (\n        <>\n          <Icon name=\"angle down\" /> Show Snippets\n        </>\n      )}\n    </Button>\n  );\n};\n","import \"./SnippetList.css\";\nimport { List, Button, Icon } from \"semantic-ui-react\";\nimport { TexSvg } from \"./TexSvg\";\n\nexport const SnippetList = ({ snippets, onPaste, onDownload, onDelete }) => {\n  return (\n    <List relaxed=\"very\" divided>\n      {\n        snippets.length === 0 &&\n        <p>\n          No Snippets. \"Save\" to add a snippet.\n        </p>\n      }\n      {snippets.map(({ key, tex }) => (\n        <List.Item key={key}>\n          <List.Content floated=\"right\">\n            <Button\n              icon\n              circular\n              onClick={() => onPaste(tex)}\n              title=\"Paste to the editor\"\n              size=\"mini\"\n            >\n              <Icon name=\"paste\" /> Paste\n            </Button>\n            <Button\n              icon\n              circular\n              onClick={() => onDownload({ key, tex })}\n              title=\"Download as a png image\"\n              size=\"mini\"\n            >\n              <Icon name=\"download\" />\n            </Button>\n            <Button\n              icon\n              circular\n              onClick={() => onDelete(key)}\n              title=\"Delete the snippet\"\n              size=\"mini\"\n              style={{ marginLeft: \"12px\" }}\n            >\n              <Icon name=\"trash\" />\n            </Button>\n          </List.Content>\n          <List.Content className=\"SnippetList-item-content\">\n            <TexSvg tex={tex} scale={12} />\n          </List.Content>\n        </List.Item>\n      ))}\n    </List>\n  );\n};\n","import SVG from \"react-inlinesvg\";\nimport \"./Logo.css\";\n\nexport const Logo = ({ size }) => (\n  <SVG\n    className=\"Logo\"\n    src={`\n<svg viewBox=\"0 0 100 100\">\n  <polygon points=\"0,0 100,0 50.0,86\" style=\"fill:rgb(182 212 233);\"></polygon>\n</svg>\n`}\n    width={size}\n    height={size}\n  />\n);\n","import \"./App.css\";\nimport {\n  useSnippetStorage,\n  useTextInput,\n  useToggle,\n  useDownloadPng,\n} from \"./hooks\";\nimport { Container, Form, TextArea } from \"semantic-ui-react\";\nimport { TexSvg } from \"./TexSvg\";\nimport { useCallback } from \"react\";\nimport { SaveButton, SnippetsToggleButton } from \"./Buttons\";\nimport { SnippetList } from \"./SnippetList\";\nimport { Logo } from \"./Logo\";\n\nconst PNG_SCALE = 4;\nconst SVG_SCALE = 16;\n\nfunction App() {\n  const {\n    snippets,\n    topSnippet,\n    addSnippet,\n    deleteSnippet,\n  } = useSnippetStorage();\n  const { text, onChangeText, onResetText } = useTextInput(\n    topSnippet || \"ax^2+bx+c=0\"\n  );\n  const [openSnippets, toggleOpenSnippets] = useToggle(false);\n  const onDownload = useDownloadPng({\n    pngScale: PNG_SCALE,\n    svgScale: SVG_SCALE,\n  });\n  const onSave = useCallback(() => {\n    addSnippet(text);\n    toggleOpenSnippets(true);\n  }, [text, addSnippet, toggleOpenSnippets]);\n  return (\n    <div className=\"App\">\n      <Container>\n        <header className=\"App-header\">\n          <h1 className=\"App-header-title\">\n            <Logo size={24} />\n            LaTeX Snippet with{\" \"}\n            <a href=\"https://www.mathjax.org/\" target=\"_blank\" rel=\"noreferrer\">\n              MathJax\n            </a>\n          </h1>\n        </header>\n        <div className=\"App-row App-container\">\n          <Form>\n            <TextArea\n              className=\"App-textarea\"\n              placeholder=\"Write a LaTeX equation\"\n              value={text}\n              onChange={onChangeText}\n              spellCheck={false}\n            />\n          </Form>\n        </div>\n        <div className=\"App-row App-container\">\n          <TexSvg tex={text} scale={SVG_SCALE} />\n        </div>\n        <div className=\"App-menu App-container\">\n          <SaveButton onClick={onSave} />\n          <SnippetsToggleButton\n            onToggle={toggleOpenSnippets}\n            open={openSnippets}\n          />\n        </div>\n        {openSnippets && (\n          <div className=\"App-snippets App-container\">\n            <SnippetList\n              snippets={snippets}\n              onPaste={onResetText}\n              onDownload={onDownload}\n              onDelete={deleteSnippet}\n            />\n          </div>\n        )}\n      </Container>\n      <footer className=\"App-footer\">\n        <div>© 2021 FujiHaruka</div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { MathJaxLoader } from \"./MathJaxLoader\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MathJaxLoader>\n      <App />\n    </MathJaxLoader>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}